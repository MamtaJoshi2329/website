"use strict";class DpGeoForm extends DpForm{constructor(){super(),this.geo_=new DpGeo,this.geo_ext_=new DpGeo,this.secondary_context_=!1,this.olson_timezone_post_request_=null,this.clear_button_=document.getElementById("dp-clear-button"),this.submit_button_=document.getElementById("dp-submit-button"),this.fields_tooltip_elements_=document.getElementsByClassName("dpInputTooltip")}removeFormTooltip(){for(let index=0;index<this.fields_tooltip_elements_.length;index+=1)this.fields_tooltip_elements_[index].classList.remove("dpDisplayTooltip")}addFormTooltip(){for(let index=0;index<this.fields_tooltip_elements_.length;index+=1)this.fields_tooltip_elements_[index].classList.add("dpDisplayTooltip")}registerButtonClickListeners(){this.performActionOnLatitudeLongitudeValueChange(),this.handler_.customizeActionButtonsBasedOnContext(),this.handler_.registerButtonClickListeners()}fillFormWithSelectedItem(geoData,selectorID){geoData=geoData.split("|");"dp-second-city-search"===selectorID?(this.secondary_context_=!0,this.geo_ext_.city_=geoData[0],this.geo_ext_.state_=geoData[1],this.geo_ext_.country_=geoData[2],this.geo_ext_.latitude_=geoData[3],this.geo_ext_.longitude_=geoData[4],this.geo_ext_.elevation_=geoData[5],this.geo_ext_.olson_timezone_=geoData[6],this.geo_ext_.timezone_offset_=geoData[7]):(this.secondary_context_=!1,this.geo_.city_=geoData[0],this.geo_.state_=geoData[1],this.geo_.country_=geoData[2],this.geo_.latitude_=geoData[3],this.geo_.longitude_=geoData[4],this.geo_.elevation_=geoData[5],this.geo_.olson_timezone_=geoData[6],this.geo_.timezone_offset_=geoData[7]),this.populateGeoLocationForm(),this.secondary_context_=!1}populateGeoLocationForm(){var placeHolder=this.secondary_context_?"-second":"",geo=this.secondary_context_?this.geo_ext_:this.geo_,tokenArray=($("#dp"+placeHolder+"-city-search").val(geo.getCity),$("#dp"+placeHolder+"-state").val(geo.getState),$("#dp"+placeHolder+"-country").val(geo.getCountry),$(".dpExtendedGeoFields"+placeHolder).slideDown(100),this.tokenizeAngle(geo.getLatitude)),signValue="+"===tokenArray[0]?"select-plus-option":"select-minus-option",signValue=($("#dp"+placeHolder+"-lat-sign").val(signValue),$("#dp"+placeHolder+"-lat-deg").val(tokenArray[1]),$("#dp"+placeHolder+"-lat-min").val(tokenArray[2]),$("#dp"+placeHolder+"-lat-sec").val(tokenArray[3]),signValue="+"===(tokenArray=this.tokenizeAngle(geo.getLongitude))[0]?"select-plus-option":"select-minus-option",$("#dp"+placeHolder+"-long-sign").val(signValue),$("#dp"+placeHolder+"-long-deg").val(tokenArray[1]),$("#dp"+placeHolder+"-long-min").val(tokenArray[2]),$("#dp"+placeHolder+"-long-sec").val(tokenArray[3]),new RegExp(Object.keys(dpEssential.numeral_map_).join("|"),"g")),tokenArray=geo.getElevation.toString().replace(signValue,dpEssential.replaceNumerals.bind(dpEssential)),signValue=($("#dp"+placeHolder+"-elevation").val(tokenArray),document.getElementById("dp"+placeHolder+"-olson-timezone"));geo.getOlsonTimezone&&signValue&&(signValue.value=geo.getOlsonTimezone,tokenArray=geo.getTimezoneOffset,signValue=parseFloat(tokenArray).toFixed(2),geo=(this.geo_.setTimezoneOffset=signValue).toString().replace(/[0123456789]/g,dpEssential.replaceNumerals.bind(dpEssential)),$("#dp"+placeHolder+"-offset").val(geo))}tokenizeAngle(latitudeLongitudeAngle){let tokenArray;if(null===latitudeLongitudeAngle)return tokenArray=["0","00","00","00"];let sign="+",d=(latitudeLongitudeAngle<0&&(sign="-",latitudeLongitudeAngle=-latitudeLongitudeAngle),Math.floor(latitudeLongitudeAngle));latitudeLongitudeAngle=60*(latitudeLongitudeAngle-d);let m=Math.floor(latitudeLongitudeAngle);latitudeLongitudeAngle=60*(latitudeLongitudeAngle-m);let s=Math.round(latitudeLongitudeAngle);return 60===s&&(m++,s=0),60===m&&(d++,m=0),d<=9&&(d="0"+d),m<=9&&(m="0"+m),s<=9&&(s="0"+s),tokenArray=[sign,d,m,s]}performActionOnLatitudeLongitudeValueChange(){let self=this;var placeHolder=this.secondary_context_?"-second":"";$("#dp"+placeHolder+"-lat-deg, #dp"+placeHolder+"-lat-min, #dp"+placeHolder+"-lat-sec, #dp"+placeHolder+"-lat-sign, #dp"+placeHolder+"-long-deg, #dp"+placeHolder+"-long-min, #dp"+placeHolder+"-long-sec, #dp"+placeHolder+"-long-sign").each(function(index){$(this).on("change",function(){self.secondary_context_=-1!==this.id.indexOf("-second"),self.populateOlsonTimezone()})})}getLatitudeLookupFromFormData(){var placeHolder=this.secondary_context_?"-second":"",latDeg=$("#dp"+placeHolder+"-lat-deg")[0],latMin=$("#dp"+placeHolder+"-lat-min")[0],latSec=$("#dp"+placeHolder+"-lat-sec")[0],placeHolder=$("#dp"+placeHolder+"-lat-sign")[0],latitudeLookup={};return latitudeLookup.degree=latDeg,latitudeLookup.minutes=latMin,latitudeLookup.seconds=latSec,latitudeLookup.sign=placeHolder,latitudeLookup}getLongitudeLookupFromFormData(){var placeHolder=this.secondary_context_?"-second":"",longDeg=$("#dp"+placeHolder+"-long-deg")[0],longMin=$("#dp"+placeHolder+"-long-min")[0],longSec=$("#dp"+placeHolder+"-long-sec")[0],placeHolder=$("#dp"+placeHolder+"-long-sign")[0],longitudeLookup={};return longitudeLookup.degree=longDeg,longitudeLookup.minutes=longMin,longitudeLookup.seconds=longSec,longitudeLookup.sign=placeHolder,longitudeLookup}validateCustomGeoStrings(){var placeHolder=this.secondary_context_?"-second":"",selectedCity=$("#dp"+placeHolder+"-city-search")[0].value,selectedState=$("#dp"+placeHolder+"-state")[0].value,placeHolder=$("#dp"+placeHolder+"-country")[0].value,emptyCity=this.secondary_context_?dpSecondEmptyCityString:dpEmptyCityString,emptyCitySuggestion=this.secondary_context_?dpSecondCityNameSuggestionString:dpCityNameSuggestionString,validatedGeoValueMap=[];if(validatedGeoValueMap["error-flag"]=DpForm.validateName(selectedCity,emptyCity,emptyCitySuggestion),!validatedGeoValueMap["error-flag"]){if(0!==selectedState.trim().length){emptyCity=this.secondary_context_?dpSecondEmptyStateString:dpEmptyStateString,emptyCitySuggestion=this.secondary_context_?dpSecondStateNameSuggestionString:dpStateNameSuggestionString;if(validatedGeoValueMap["error-flag"]=DpForm.validateName(selectedState,emptyCity,emptyCitySuggestion),validatedGeoValueMap["error-flag"])return validatedGeoValueMap}emptyCity=this.secondary_context_?dpSecondEmptyCountryString:dpEmptyCountryString,emptyCitySuggestion=this.secondary_context_?dpSecondCountryNameSuggestionString:dpCountryNameSuggestionString;validatedGeoValueMap["error-flag"]=DpForm.validateName(placeHolder,emptyCity,emptyCitySuggestion),validatedGeoValueMap["geo-city"]=selectedCity,validatedGeoValueMap["geo-state"]=selectedState,validatedGeoValueMap["geo-country"]=placeHolder}return validatedGeoValueMap}validateCustomGeoData(){let validatedGeoValueMap=[];var placeHolder=this.secondary_context_?"-second":"",selectedLatDeg=$("#dp"+placeHolder+"-lat-deg")[0].value,selectedLatMin=$("#dp"+placeHolder+"-lat-min")[0].value,selectedLatSec=$("#dp"+placeHolder+"-lat-sec")[0].value,selectedLatSign=$("#dp"+placeHolder+"-lat-sign")[0].value;if(0===selectedLatDeg.length||isNaN(selectedLatDeg)||parseInt(selectedLatDeg)<0||66<parseInt(selectedLatDeg))alert(this.secondary_context_?dpSecondEmptyLatDegreeString:dpEmptyLatDegreeString),validatedGeoValueMap["error-flag"]=!0;else if(0===selectedLatMin.length||isNaN(selectedLatMin)||parseInt(selectedLatMin)<0||59<parseInt(selectedLatMin))alert(this.secondary_context_?dpSecondEmptyLatMinuteString:dpEmptyLatMinuteString),validatedGeoValueMap["error-flag"]=!0;else if(0===selectedLatSec.length||isNaN(selectedLatSec)||parseInt(selectedLatSec)<0||59<parseInt(selectedLatSec))alert(this.secondary_context_?dpSecondEmptyLatSecondString:dpEmptyLatSecondString),validatedGeoValueMap["error-flag"]=!0;else{var emptyLatSign=this.secondary_context_?dpSecondEmptyLatSignString:dpEmptyLatSignString;if(!(validatedGeoValueMap=this.validateGeoLocationSignValue(selectedLatSign,"geo-lat-sign",emptyLatSign))["error-flag"]){let latitude=parseInt(selectedLatDeg)+parseInt(selectedLatMin)/60+parseInt(selectedLatSec)/3600;latitude=latitude.toFixed(4),"-"===validatedGeoValueMap["geo-lat-sign"]&&(latitude*=-1),validatedGeoValueMap["geo-latitude"]=latitude.toString();selectedLatSign=$("#dp"+placeHolder+"-long-deg")[0].value,emptyLatSign=$("#dp"+placeHolder+"-long-min")[0].value,selectedLatDeg=$("#dp"+placeHolder+"-long-sec")[0].value,selectedLatMin=$("#dp"+placeHolder+"-long-sign")[0].value;if(0===selectedLatSign.length||isNaN(selectedLatSign)||parseInt(selectedLatSign)<0||180<parseInt(selectedLatSign))alert(this.secondary_context_?dpSecondEmptyLongDegreeString:dpEmptyLongDegreeString),validatedGeoValueMap["error-flag"]=!0;else if(0===emptyLatSign.length||isNaN(emptyLatSign)||parseInt(emptyLatSign)<0||59<parseInt(emptyLatSign))alert(this.secondary_context_?dpSecondEmptyLongMinuteString:dpEmptyLongMinuteString),validatedGeoValueMap["error-flag"]=!0;else if(0===selectedLatDeg.length||isNaN(selectedLatDeg)||parseInt(selectedLatDeg)<0||59<parseInt(selectedLatDeg))alert(this.secondary_context_?dpSecondEmptyLongSecondString:dpEmptyLongSecondString),validatedGeoValueMap["error-flag"]=!0;else{selectedLatSec=this.secondary_context_?dpSecondEmptyLongSignString:dpEmptyLongSignString,selectedLatMin=this.validateGeoLocationSignValue(selectedLatMin,"geo-long-sign",selectedLatSec);if(selectedLatMin["error-flag"])return selectedLatMin;validatedGeoValueMap["geo-long-sign"]=selectedLatMin["geo-long-sign"];let longitude=parseInt(selectedLatSign)+parseInt(emptyLatSign)/60+parseInt(selectedLatDeg)/3600;longitude=longitude.toFixed(4),"-"===validatedGeoValueMap["geo-long-sign"]&&(longitude*=-1),validatedGeoValueMap["geo-longitude"]=longitude.toString();selectedLatSec=$("#dp"+placeHolder+"-olson-timezone")[0].value;if(0===parseInt(selectedLatSec))alert(this.secondary_context_?dpSecondEmptyOlsonTimezoneString:dpEmptyOlsonTimezoneString),validatedGeoValueMap["error-flag"]=!0;else if("UTC"===selectedLatSec.toUpperCase())alert(dpOlsonTimezoneDoNotExistString),validatedGeoValueMap["error-flag"]=!0;else{validatedGeoValueMap["geo-olson-timezone"]=selectedLatSec;let elevation=$("#dp"+placeHolder+"-elevation")[0].value,englishNumeralsList=Object.keys(dpEssential.numeral_map_);selectedLatMin=Object.keys(dpEssential.numeral_map_).map(function(e){return dpEssential.numeral_map_[e]});let flippedNumeralList={};selectedLatMin.forEach(function(key,index){return flippedNumeralList[key]=englishNumeralsList[index]});selectedLatSign=new RegExp(Object.keys(flippedNumeralList).join("|"),"g"),emptyLatSign=elevation.replace(selectedLatSign,function(matched){return flippedNumeralList[matched]});elevation=parseInt(emptyLatSign),isNaN(elevation)||elevation<0||8850<elevation?(alert(this.secondary_context_?dpSecondEmptyElevationString:dpEmptyElevationString),validatedGeoValueMap["error-flag"]=!0):(validatedGeoValueMap["geo-elevation"]=elevation,selectedLatDeg=$("#dp"+placeHolder+"-offset")[0].value,validatedGeoValueMap["geo-timezone-offset"]=selectedLatDeg.replace(selectedLatSign,function(matched){return flippedNumeralList[matched]}))}}}}return validatedGeoValueMap}validateGeoLocationSignValue(selectedLatSign,signKey,alertMessage){var validatedSignValueMap=[];return validatedSignValueMap["error-flag"]=!1,"select-minus-option"===selectedLatSign?validatedSignValueMap[signKey]="-":"select-plus-option"===selectedLatSign?validatedSignValueMap[signKey]="+":(alert(alertMessage),validatedSignValueMap["error-flag"]=!0),validatedSignValueMap}populateOlsonTimezone(){var timezoneElementId="dp"+(this.secondary_context_?"-second":"")+"-olson-timezone",latitudeLookup=this.getLatitudeLookupFromFormData(),longitudeLookup=this.getLongitudeLookupFromFormData(),latDeg=latitudeLookup.degree.value,latMin=latitudeLookup.minutes.value,latSec=latitudeLookup.seconds.value,latitudeLookup=latitudeLookup.sign.value,longDeg=longitudeLookup.degree.value,longMin=longitudeLookup.minutes.value,longSec=longitudeLookup.seconds.value,longitudeLookup=longitudeLookup.sign.value;let decimalLatitude=0,decimalLongitude=0;latitudeLookup="select-plus-option"===latitudeLookup?"+":"-",isNaN(latDeg)||isNaN(latMin)||isNaN(latSec)||"+"!=latitudeLookup&&"-"!=latitudeLookup||(latMin=60*parseInt(latMin)+parseInt(latSec),latSec=parseInt(latDeg)+latMin/3600,decimalLatitude=latitudeLookup+latSec),latDeg="select-plus-option"===longitudeLookup?"+":"-";if(!(isNaN(longDeg)||isNaN(longMin)||isNaN(longSec)||"+"!=latDeg&&"-"!=latDeg)){let totalSeconds=60*parseInt(longMin)+parseInt(longSec),decimal=parseInt(longDeg)+totalSeconds/3600;decimalLongitude=latDeg+decimal}this.makeAJAXRequestForOlsonTimezone(decimalLatitude,decimalLongitude,timezoneElementId)}makeAJAXRequestForOlsonTimezone(decimalLatitude,decimalLongitude,elementId){let self=this;this.olson_timezone_post_request_=jQuery.ajax({type:"POST",data:JSON.stringify({dp_payload:{latitude:decimalLatitude,longitude:decimalLongitude}}),url:DpPg.kOlsonTimezonePost,beforeSend:function(){null!==self.olson_timezone_post_request_&&self.olson_timezone_post_request_.abort()},success:function(data){data=JSON.parse(data);self.populateOlsonTimeZoneAndOffsetFields(data.olson_timezone,elementId),self.secondary_context_=!1,self.olson_timezone_post_request_=null},error:function(e){DpDialog.showAlertMessage(dpFailedToGetOlsonTimezoneString,DpImg.kImgErrorIcon),setTimeout(function(){$(".dpPopup").slideUp(100)},5e3),self.secondary_context_=!1,self.olson_timezone_post_request_=null}})}populateOlsonTimeZoneAndOffsetFields(timezoneList,elementId){var olsonTimezone;timezoneList.hasOwnProperty("timezone_id")&&(olsonTimezone=timezoneList.timezone_id,timezoneList=timezoneList.raw_offset.toFixed(2),document.getElementById(elementId).value=olsonTimezone,elementId=this.secondary_context_?"-second":"",this.geo_.setTimezoneOffset=timezoneList,$("#dp"+elementId+"-offset")[0].value=timezoneList.toString().replace(/[0123456789]/g,dpEssential.replaceNumerals.bind(dpEssential)))}}class DpCustomGeoForm extends DpGeoForm{constructor(){super(),this.handler_=new DpGeoHandler,this.mysql_geo_flag_=!1,this.show_new_city_flag_=!1}}